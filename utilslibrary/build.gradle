apply plugin: 'com.android.library'

android {
    compileSdkVersion Integer.parseInt(project.COMPILE_SDK_VERSION)

    defaultConfig {
        minSdkVersion Integer.parseInt(project.MIN_SDK_VERSION)
        targetSdkVersion Integer.parseInt(project.TARGET_SDK_VERSION)
        versionCode 1
        versionName "1.0"
        //如果dex文件合并失败就开启,65535
        multiDexEnabled false
    }
    /*lintOptions{
        //遇到错误终止打包，false为不会终止
        abortOnError true
    }*/
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    api "com.android.support:appcompat-v7:${project.SUPPORT_VERSION}"
    api "com.android.support:design:${project.SUPPORT_VERSION}"
}

task clearJar(type: Delete) {
    delete 'build/libs/utilslibrary.jar'
    delete 'libs/utilslibrary.jar'
}

//Copy类型
task makeJar(type: Copy) {
    //删除存在的
    delete 'build/libs/mysdk.jar'
    //设置拷贝的文件
    from('build/intermediates/bundles/release/')
    //打进jar包后的文件目录
    into('build/libs/')
    //将classes.jar放入build/libs/目录下
    //include ,exclude参数来设置过滤
    //（我们只关心classes.jar这个文件）
    include('classes.jar')
    //重命名
    rename('classes.jar', 'mysdk.jar')
}

makeJar.dependsOn(build)
//在终端执行生成JAR包
// gradlew makeJar
