apply plugin: 'com.android.library'

android {
    compileSdkVersion Integer.parseInt(project.COMPILE_SDK_VERSION)
    buildToolsVersion project.BUILD_TOOLS_VERSION

    defaultConfig {
        minSdkVersion Integer.parseInt(project.MIN_SDK_VERSION)
        targetSdkVersion Integer.parseInt(project.TARGET_SDK_VERSION)
        versionCode 1
        versionName "1.0"
        //如果dex文件合并失败就开启,65535
        multiDexEnabled false
    }
    /*lintOptions{
        //遇到错误终止打包，false为不会终止
        abortOnError true
    }*/
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    api "com.android.support:appcompat-v7:${project.SUPPORT_VERSION}"
    api "com.android.support:design:${project.SUPPORT_VERSION}"
}

task clearJar(type: Delete) {
    delete 'build/libs/utilslibrary.jar'
    delete 'libs/utilslibrary.jar'
}

//打包任务
task makeJar(type: Jar) {
    //指定生成的jar名
    baseName 'utils_library'
    //从哪里打包class文件
    from('utilslibrary/build/intermediates/classes/release/regpang/utilslibrary')
    //打包到jar后的目录结构
    into('com.xmqian.utilslibrary')
    //去掉不需要打包的目录和文件
    exclude { it.name.startsWith('R$') }
}
makeJar.dependsOn(clearJar, build)
